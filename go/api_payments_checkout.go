/*
 * Subscription Manager
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package subscriptionManager

import (
	"log"
	"net/http"
	"subscriptionManager/util"

	"github.com/gin-gonic/gin"
	"github.com/stripe/stripe-go/v72"
	"github.com/stripe/stripe-go/v72/checkout/session"
)

type Price struct {
	PriceID string `json:"price_id"`
}

func Checkout(c *gin.Context) {

	//get request parameters
	json := Price{}
	c.BindJSON(&json)
	price_id := json.PriceID
	log.Printf("%v", price_id)

	//get stripe api key
	config, err := util.LoadConfig(".")
	if err != nil {
		log.Fatal("cannot load config:", err)
	}
	stripe.Key = config.StripeAPI

	domain := "http://localhost:4242"

	//create checkout session
	params := &stripe.CheckoutSessionParams{
		LineItems: []*stripe.CheckoutSessionLineItemParams{
			&stripe.CheckoutSessionLineItemParams{
				Price:    stripe.String(price_id),
				Quantity: stripe.Int64(1),
			},
		},
		Mode:       stripe.String("subscription"),
		SuccessURL: stripe.String(domain + "?success=true"),
		CancelURL:  stripe.String(domain + "?canceled=true"),
	}
	s, err := session.New(params)
	if err != nil {
		log.Println(err)
	} else {
		// c.JSON(http.StatusOK, gin.H{
		// 	"checkoutURL": s.URL,
		// })
		c.Redirect(http.StatusFound, s.URL)
	}
}
